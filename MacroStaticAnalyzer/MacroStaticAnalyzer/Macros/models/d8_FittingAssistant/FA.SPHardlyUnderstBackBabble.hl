// First Draft based on FA.AATemplateFitAss.hl 											:2013-04-18 Raymond
// Updated builtin functions name														:2013-05-14 Raymond
// Added FA_P_ActSnm to proposal2														:2013-06-27 Raymond
// Added missing else keyword															:2013-06-28 Raymond
// Update due to CR62325																:2013-07-02 Judith
//FR62273: FIAS - Display propsal cannot be applied text for Tinnitus ear side          :2013-07-05 Judith
// Bugfix due to optimization                                                           :2013-07-19 Judith
// Bugfix due to optimization                                                           :2013-07-22 Judith
//------------------------------------------------7.3----------------------------------------------------------------
// Clean up comments and refractor method argument										:2013-12-13 Raymond
// Removed MicAuto proposals from proposal 1 and move proposal 2 to proposal 1			:2013-12-16 Raymond
//-------------------------------------------------7.4-----------------------------------------------------------------
// Update proposal 1 SPASS structure to display correct proposal for PP700 and PP500    :2014-07-12 Mang Yew
// Added Noisy Env proposal in Proposal 2												:2014-09-16 Mang Yew
/*------------------------------------------------------------------------------------------------------------------*/
namespace shs_sat
{
	using shs_sat.*;
	package FittingAssistent SPHardlyUnderstBackBabble
	{
		application function bool IsVisible ()
		{
			return true;
		} //closing SPHardlyUnderstBackBabble.IsVisible
		application function bool IsEnabled ()
		{
			return true;
		} //closing SPHardlyUnderstBackBabble.IsEnabled
		application function void SelectProposal1 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure())
			{
				setApply1IsVisible (false);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_P_Tinnitus");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_ActSpass"))
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (true);
				setProposalTextID1 ("FA_P_ActSpass");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_IncSpass"))
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (true);
				setProposalTextID1 ("FA_P_IncSpass");
			}
			else if (cap:DirMicAvailable == DirMicAvailable.omni || cap:PricePoint < PricePoint.PP500)
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_X_ActSpass");
			}
			else if (cap:PricePoint != PricePoint.PP700)
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_X_IncSpass");
			}
			else
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_N_IncSpass");
			}
		} //closing SPHardlyUnderstBackBabble.SelectProposal1
		application function void ApplyProposal1 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID1 ());
		} //closing SPHardlyUnderstBackBabble.ApplyProposal1
		application function void SelectProposal2 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure())
			{
				setApply2IsVisible (false);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_P_Tinnitus");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_AddNoisyEnv"))
			{
				setApply2IsVisible (false);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_P_AddNoisyEnv");
			}
			else
			{
				setApply2IsVisible (false);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_X_AddNoisyEnv");
			}
		} //closing SPHardlyUnderstBackBabble.SelectProposal2
		application function void ApplyProposal2 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID2 ());
		} //closing SPHardlyUnderstBackBabble.ApplyProposal2

	} //package FitAss SPHardlyUnderstBackBabble

} //namespace shs_sat