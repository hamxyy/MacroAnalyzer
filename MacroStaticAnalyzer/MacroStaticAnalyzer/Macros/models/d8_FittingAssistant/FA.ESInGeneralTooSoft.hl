// First Draftbased on FA.AATemplateFitAss.hl 		   									:2013-04-17 Raymond
// Updated Package Name																	:2013-05-06 Judith
// Updated proposal name																:2013-05-10 Raymond
// Updated builtin functions name														:2013-05-13 Raymond
// Added empty SelectProposal2 and ApplyProposal2 for there is no code completion       :2013-05-21 Judith
// Update setApply2IsVisible to true													:2013-05-30 Raymond
// Update due to CR62325																:2013-07-02 Judith
//FR62273: FIAS - Display propsal cannot be applied text for Tinnitus ear side          :2013-07-05 Judith
//Update due to optimization                                                            :2013-07-22 Judith
// Added missing ApplyProposal2 statement												:2013-07-23 Raymond
// Added FA_P_ActSnm to proposal2														:2013-08-05 Raymond
// CR63201: Corrected sub proposal order for Proposal 2									:2013-08-26 Raymond
//----------------------------------------------------------- 7.3 ---------------------------------------------------
// Clean up comments and refractor method argument										:2013-12-13 Raymond
/*------------------------------------------------------------------------------------------------------------------*/
namespace shs_sat
{
	using shs_sat.*;
	package FittingAssistent ESInGeneralTooSoft
	{
		application function bool IsVisible ()
		{
			return true;
		} //closing ESInGeneralTooSoft.IsVisible
		application function bool IsEnabled ()
		{
			return true;
		} //closing ESInGeneralTooSoft.IsEnabled
		application function void SelectProposal1 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure ())
			{
				setApply1IsVisible (false);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_P_Tinnitus");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_IncGain"))
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (true);
				setProposalTextID1 ("FA_P_IncGain");
			}
			else
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_N_IncGain");
			}
		} //closing ESInGeneralTooSoft.SelectProposal1
		application function void ApplyProposal1 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID1 ());
		} //closing ESInGeneralTooSoft.ApplyProposal1
		application function void SelectProposal2 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure ())
			{
				setApply2IsVisible (false);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_P_Tinnitus");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_ActSnm"))
			{
				setApply2IsVisible(true);
				setApply2IsEnabled(true);
				setProposalTextID2("FA_P_ActSnm");
			}
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_DecSnm"))
			{
				setApply2IsVisible (true);
				setApply2IsEnabled (true);
				setProposalTextID2 ("FA_P_DecSnm");
			}
			else if (cap:PricePoint == PricePoint.PP75)
			{
				setApply2IsVisible (true);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_X_DecSnm");
			}
			else
			{
				setApply2IsVisible (true);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_N_DecSnm");
			}
		} // Closing ESInGeneralTooSoft.SelectProposal2
		application function void ApplyProposal2 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID2 ());
		} // Closing ESInGeneralTooSoft.ApplyProposal2

	} // package FitAss ESInGeneralTooSoft

} // namespace shs_sat