// First Draft based on FA.AATemplateFitAss.hl 											:2013-04-18 Raymond
// Updated Package Name																	:2013-05-06 Judith
// Updated builtin functions name														:2013-05-14 Raymond
// Update due to CR62325																:2013-07-02 Judith
//FR62273: FIAS - Display propsal cannot be applied text for Tinnitus ear side          :2013-07-05 Judith
//---------------------------------------------------------7.3------------------------------------------------------
// Clean up comments and refractor method argument										:2013-12-13 Raymond
/*------------------------------------------------------------------------------------------------------------------*/
namespace shs_sat
{
	using shs_sat.*;
	package FittingAssistent SPTooSoftDistantSpeaker
	{
		application function bool IsVisible ()
		{
			return true;
		} //closing SPTooSoftDistantSpeaker.IsVisible
		application function bool IsEnabled ()
		{
			return true;
		} //closing SPTooSoftDistantSpeaker.IsEnabled
		application function void SelectProposal1 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure())
			{
				setApply1IsVisible (false);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_P_Tinnitus");
			}			
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_IncGainSoftSound"))
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (true);
				setProposalTextID1 ("FA_P_IncGainSoftSound");
			}
			else
			{
				setApply1IsVisible (true);
				setApply1IsEnabled (false);
				setProposalTextID1 ("FA_N_IncGainSoftSound");
			}
		} //closing SPTooSoftDistantSpeaker.SelectProposal1
		application function void ApplyProposal1 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID1 ());
		} //closing SPTooSoftDistantSpeaker.ApplyProposal1
		application function void SelectProposal2 ()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure())
			{
				setApply2IsVisible (false);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_P_Tinnitus");
			}			
			else if (High_Level_Library_FitAssApplicable.FitAssIsProposalApplicable ("FA_P_IncGain"))
			{
				setApply2IsVisible (true);
				setApply2IsEnabled (true);
				setProposalTextID2 ("FA_P_IncGain");
			}
			else
			{
				setApply2IsVisible (true);
				setApply2IsEnabled (false);
				setProposalTextID2 ("FA_N_IncGain");
			}
		} //closing SPTooSoftDistantSpeaker.SelectProposal2
		application function void ApplyProposal2 ()
		{
			High_Level_Library_FitAssApply.ApplyProposal (getProposalTextID2 ());
		} //closing SPTooSoftDistantSpeaker.ApplyProposal2

	} //package FitAss SPTooSoftDistantSpeaker

} //namespace shs_sat