/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                          Direct Audio Input(DAI) Toggle En Checkbox
// Initial Version		         									    : 2011-03-28 Cecil Wilson
// Add println for easy debugging										: 2011-06-27 Chuah LayYuan
// Add Toggle and SpeechActivation dependency handling					: 2011-08-04 Chuah LayYuan
// Add println for MPV testing											: 2011-09-22  Jenny Lin
// Add tick with greyOut handling for toggle                            : 2011-09-27 Chuah LayYuan
// Modified handling for tick with greyOut							    : 2011-11-08  Chuah LayYuan
// Macro code Cleanup & added setpos call to HLIB						: 2012-02-14  Cecil Wilson
// Deleted comments above application functions that descibe what the functions do  :  Alastair Manders 2012-06-5
// ******SIFIT7.2_PEERREVIEWED: 					  :  2013-07-30   Jenny, Judith
// updated IsVisible() to call the Is_DAI_Input_Mode()	: 2013-11-04 Jenny
// refractor: Optimize code									: 2013-12-02 Jenny
// updated println statement for debugging.											: 2014-01-15 Jenny
// Sifit7.3 Peer review																: 2014-04-15 Jenny, Judith
// ****** SIFIT7.4 ******
// Updated SetPos to PrintEnvSettings to test SideSelection macro.  				:  2014-08-25   Jenny
// Updated IsVisible to call BLIB instead of MLIB. Code cleanup: Updated printlines.	: 2014-10-21 Jenny
/*---------------------------------------------------------------------------------------------------------------$$*/
namespace shs_sat
{
	using shs_sat.*;
	package MixedMode DAI_ToggleEn
	{
		application function bool IsVisible ()
		{
			println ('[HAL]MixedMode.DAI_ToggleEn.IsVisible'+ BasicLibrary_DebugPrint.PrintEnvSettings());

			bool retVal = BasicLibrary_InputMode.Is_DAI_Input_Mode ();
			return retVal;
		}
		
		application function bool IsEnabled ()
		{
			println ('[HAL]MixedMode.DAI_ToggleEn.IsEnabled');

			bool retVal = High_Level_Library_DAI.DAI_ToggleEn_IsEnabled ();
			return retVal;
		}
		
		application function int MaxPos ()
		{
			println ('[HAL]MixedMode.DAI_ToggleEn.MaxPos');

			int retVal = 1;
			return retVal;
		}

		application function int GetPos ()
		{
			println ('[HAL]MixedMode.DAI_ToggleEn.GetPos');

			int retVal =  BasicLibrary_DAI.DAI_ToggleEn_Get_Mode ();
			return retVal;
		}
		
		application function void SetPos (int pos)
		{
			println ('[HAL]MixedMode.DAI_ToggleEn.SetPos'+ BasicLibrary_DebugPrint.PrintEnvSettings());
			
			High_Level_Library_DAI.DAI_ToggleEn_Set (pos);
		}
	}
}