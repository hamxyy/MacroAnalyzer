/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                        Beep ProgramChange CheckBox
// Initial Version      without isEnabled --> still missing          		:	2011-04-18  Meike Doose
// Reworked IsEnabled to call MLIB function									:   2011-07-14  Nadia Neugeborn
// Add println for MPV testing												 :  2011-09-22  Jenny Lin
// Updated to call HLIB instead of BLIB										 :  2012-04-20  Jenny Lin
// Deleted comments above application functions that descibe what the functions do  :  Alastair Manders 2012-06-5 
// Delete int hp=env:Prog and removed unecessary println					:	2012-06-07	Mang Yew
// *********************************************CODE FREEZE*******************************************************
// Sifit7.3 Peer review														: 2014-04-28 Jenny, Jeline
// Sifit7.4 Peer review: update printline in IsEnabled()  					: 2014-11-18 MieMie/Sultan/Jeline				
/*---------------------------------------------------------------------------------------------------------------*/

namespace shs_sat 
{	
	using shs_sat.*;

	package MixedMode BeepProgramChangeEn
	{			
		application function bool IsVisible()
		{
	 		println('[HAL]MM - BeepProgramChangeEn - IsVisible = TRUE');			
			// Visibility of BeepProgramChange Checkbox--> is always visible
			return true;
		}

		application function bool IsEnabled()
		{
			bool retval = Mid_Level_Library_Beep.BeepProgramChangeEn_IsEnabled();	
			println('[HAL]MM - BeepProgramChangeEn - IsEnabled = ' + retval);
			return retval;
		}
	
		application function int MaxPos()
		{
	 		println('[HAL]MM - BeepProgramChangeEn - MaxPos = 1');
			return 1;     // This is a Check Box with 2 states. 0 and 1
		}
			
		application function bool IsEnabledPos(int pos)
		{
	 		println('[HAL]MM - BeepProgramChangeEn - IsEnabledPos = TRUE');					
			return true; // IsEnabledPos is always true
		}
			
		application function int GetPos()
		{
			println('[HAL]MM - BeepProgramChangeEn - GetPos');
			return High_Level_Library_Beep.BeepProgramChangeEn_Get(); //0 for Off, 1 for On
		}
			
		application function void SetPos(int pos)
		{
	 		println('[HAL]MM - BeepProgramChangeEn - SetPos = ' + pos);			
			High_Level_Library_Beep.BeepProgramChangeEn_Set(pos);	
		}
	}
		
}
