/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                        Noise Reduction Slider
Initial Version																	: 2013-11-05 Mang Yew
Sifit7.3 Peer Reviewed															: 2014-04-16 Mang Yew
Sifit7.4 Peer Reviewed															: 2014-11-13 Mang Yew		
/*---------------------------------------------------------------------------------------------------------------*/
namespace shs_sat
{
	using shs_sat.*;  
    package MixedMode NoiseReductionSL
    {					
		application function bool IsVisible()
		{
			if (Mid_Level_Library_NoiseReduction.NoiseReductionSL_IsVisible() == true) 
			{
				println('[HAL]MixedMode.NoiseReductionSL.IsVisible = TRUE');
				return true;
			}
			else
			{
				println('[HAL]MixedMode.NoiseReductionSL.IsVisible = FALSE');
				return false;
			}
		}
				
		application function bool IsEnabled()
		{
			if (BasicLibrary_Noiser.Noiser_IsOnAndPure() == false && BasicLibrary_NoiseReduction.NoiseReductionEn_Get() == true)
			{
				println('[HAL]MixedMode.NoiseReductionSL.IsEnabled: TRUE');
				return true;
			}
			else{
				println('[HAL]MixedMode.NoiseReductionSL.IsEnabled: FALSE');
				return false;
			}
		}
				
		application function int MaxPos()
		{
			int retval = Mid_Level_Library_NoiseReduction.NoiseReductionSL_MaxPos();	
	 		println('[HAL]MixedMode.NoiseReductionSL.MaxPos = ' + retval);
	 		
			return retval;
		}
		
		application function bool IsVisiblePhysicalPos(int physicalPos)
		{
			bool retval = High_Level_Library_NoiseReduction.NoiseReductionSL_IsVisiblePhysicalPos(physicalPos);	
			
			if (retval == true )
			{
				println('[HAL]MixedMode.NoiseReductionSL.IsVisiblePhysicalPos = TRUE. physicalpos='+ physicalPos);
			}
			else
			{
				println('[HAL]MixedMode.NoiseReductionSL.IsVisiblePhysicalPos = FALSE. physicalpos='+ physicalPos);
			}
			
			return retval;		
		}
		
		application function bool IsEnabledPos(int pos)
		{		
	 		println('[HAL]MixedMode.NoiseReductionSL.IsEnabledPos = TRUE');
	 					
			return true;
		}
				
		application function int GetPos()
		{
			int retval = -1;
			int hp=env:Prog;
			retval     =   High_Level_Library_NoiseReduction.NoiseReductionSL_Get();
			if (retval==-1)
			{
				println('Macro:Error at NoiseReductionSL.GETPOS()');
			}			
	 		println('[HAL]MixedMode.NoiseReductionSL.GetPos = '+ retval + ' in HP='+hp);
	 		
	 		return retval;		 
		}
				
		application function void SetPos(int pos)
		{
			int hp=env:Prog;
	 		println('[HAL]MixedMode.NoiseReductionSL.SetPos = ' + pos + ' in HP='+hp);
	 		High_Level_Library_NoiseReduction.NoiseReductionSL_Set(pos);
		}

	}	//package MixedMode.NoiseReductionSL
}	//namespace shs.sat
