/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                        Beep VCLimit CheckBox
// Initial Version      without isEnabled --> still missing          		:	2011-04-19  Meike Doose
// include isEnable for greying out when VC=off 							:	2011-08-01	Meike Doose
// Add println for MPV testing												 :  2011-09-22  Jenny Lin
// Updated to call HLIB instead of BLIB										 :  2012-04-20  Jenny Lin
// Deleted comments above application functions that descibe what the functions do  :  Alastair Manders 2012-06-5  
// Delete int hp=env:Prog and removed unecessary println					:	2012-06-07	Mang Yew
// *********************************************CODE FREEZE*******************************************************
// Beeps always return true.												: 	2014-02-25 Mang Yew
// Rework IsEnabled to return false or true based on PhlVcRange				:	2014-02-27 Mang Yew
// Sifit7.3 Peer review														: 2014-04-30 Jenny, Jeline
// Sifit7.4 Peer review: update printline in IsEnabled()  					: 2014-11-18 MieMie/Sultan/Jeline
/*---------------------------------------------------------------------------------------------------------------*/
namespace shs_sat {
	using shs_sat.*;
	//e.g. checkbox to enable/disable the BeepVCLimit
	package MixedMode BeepVCLimitEn{

		application function bool IsVisible(){
	 		println('[HAL]MM - BeepVCLimitEn - IsVisible = TRUE');			
			// Visibility of BeepVCLimit Checkbox--> is always visible
			return true;
		}// Closes BeepVCLimit.IsVisible
		
		application function bool IsEnabled(){
			bool retval = Mid_Level_Library_Beep.VCBeeps_IsEnabled();
			println('[HAL]MM - BeepVCLimitEn - IsEnabled = ' + retval);	
			return retval;
	
		}// Closes BeepVCLimit.IsEnabled
	
		application function int MaxPos(){
	 		println('[HAL]MM - BeepVCLimitEn - MaxPos = 1');			

			return 1;     // This is a Check Box with 2 states. 0 and 1
		}// Closes BeepVCLimit.MaxPos
			
		application function bool IsEnabledPos(int pos){
	 		println('[HAL]MM - BeepVCLimitEn - IsEnabledPos = TRUE');			

			return true;
		}// Closes BeepVCLimit.IsEnabledPos
			
		application function int GetPos(){
			println('[HAL]MM - BeepVCLimitEn - GetPos');	
			return High_Level_Library_Beep.BeepVCLimitEn_Get();			
		}// Closes BeepVCLimit.GetPos
				
		application function void SetPos(int pos){
	 		println('[HAL]MM - BeepVCLimitEn - SetPos = ' + pos);			
			// Set the Checkbox to pos;
			High_Level_Library_Beep.BeepVCLimitEn_Set(pos);	
		}// Closes BeepVCLimit.SetPos

	}	//package MixedMode.BeepVCLimitEn
}	//namespace shs.sat
