/*---------------------------------------------------------------------------------------------------------------*
// CXX UI:                        Beep AlertProfil Drop Down Menue
// Initial Version          without isEnabled      						     :  2011-04-18 Meike Doose
// follow up with initial version											 :	2011-04-19 Meike Doose
// Add println for MPV testing												 :  2011-09-22  Jenny Lin
// Updated to call HLIB instead of BLIB										 :  2012-04-20  Jenny Lin
// Deleted comments above application functions that descibe what the functions do  :  Alastair Manders 2012-06-5 
// Deleted the line "int hp=env:Prog" in all application functions on this page, and also removed references to "hp"
// from the print lines on this page.                                        :  Alastair Manders 2012-06-5
// Added IsVisiblePhysicalPos, to cover PP75 devices.                        :  Alastair Manders 2013-06-05 
// Removed IsVisiblePhysicalPos, replaced with IsEnabledPos                  :  Alastair Manders 2013-06-17
// Sifit7.3 Peer review														 : 2014-04-30 Jenny, Jeline
// Sifit7.4 Peer review: replace HLIB.BeepAlertProfileDD_Get() 
// with BLIB.BeepAlertProfileDD_Get_Entry() 								 : 2014-11-17 MieMie/Sultan/Jeline
/*---------------------------------------------------------------------------------------------------------------*/

namespace shs_sat
{
	using shs_sat.*;
	package MixedMode BeepAlertProfileDD
	{
		application function bool IsVisible ()
		{
			println ('[HAL]MM - BeepAlertProfileDD - IsVisible = TRUE');
			return true; // Visibility of AlertProfile --> always visible
		}
		
		application function int MaxPos ()
		{
			println ('[HAL]MM - BeepAlertProfileDD - MaxPos = 1');
			return 1; // Max Pos always 1

		}
		
		application function bool IsEnabled ()
		{
			println ('[HAL]MM - BeepAlertProfileDD - IsEnabled = TRUE');
			return true; // IsEnabled of AlertProfile --> always true
		}
		
		application function bool IsEnabledPos (int pos)
		{
			println ('[HAL]MM - BeepAlertProfileDD - IsEnabledPos for pos=' + pos);
			return Mid_Level_Library_Beep.BeepAlertProfileDD_IsEnabledPos (pos);
		}
		
		application function int GetPos ()
		{
			println ('[HAL]MM - BeepAlertProfileDD - GetPos');
			return BasicLibrary_Beep.BeepAlertProfileDD_Get_Entry();
		}
		
		application function void SetPos (int pos)
		{
			println ('[HAL]MM - BeepAlertProfileDD - SetPos = ' + pos);
			High_Level_Library_Beep.BeepAlertProfileDD_Set (pos);
		}
	}

} //namespace shs.sat
